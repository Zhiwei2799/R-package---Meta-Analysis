"0","determine_tests <- function(df) {"
"0","  # Determine number of groups"
"0","  n_groups <- length(unique(df$group))"
"0","  # Initialize vector to hold tests"
"0","  tests <- c()"
"0","  if (n_groups > 2) {"
"0","    for (i in seq_along(df)) {"
"0","      if (is.numeric(df[[i]]) && !identical(df[[i]], df$group)) {"
"0","        sp <- c()"
"0","        fp <- c()"
"0","        for (j in 1:n_groups) {"
"0","          sp[j] <- shapiro.test(df[df$group == j, i])$p.value"
"0","          if (j > 1) {"
"0","            fp[j-1] <- var.test(df[df$group == (j-1), i], df[df$group == j, i])$p.value"
"0","          }"
"0","        }"
"0","        if (all(sp > 0.05) & all(fp > 0.05)) {"
"0","          pv1 <- anova(lm(df[[i]] ~ group, data = df))$p.value"
"0","          tests[i] <- ""anova"""
"0","        } else {"
"0","          pv1 <- kruskal.test(df[[i]] ~ group, data = df)$p.value"
"0","          tests[i] <- ""kruskal"""
"0","        }"
"0","      }"
"0","    }"
"0","  } else {"
"0","    for (i in seq_along(df)) {"
"0","      if (is.numeric(df[[i]]) && !identical(df[[i]], df$group)) {"
"0","        sp <- c()"
"0","        fp <- c()"
"0","        for (j in 1:n_groups) {"
"0","          sp[j] <- shapiro.test(df[df$group == j, i])$p.value"
"0","          if (j > 1) {"
"0","            fp[j-1] <- var.test(df[df$group == (j-1), i], df[df$group == j, i])$p.value"
"0","          }"
"0","        }"
"0","        if (all(sp > 0.05) & all(fp > 0.05)) {"
"0","          pv1 <- t.test(df[df$group == 1, i], df[df$group == 2, i], var.equal = TRUE)$p.value"
"0","          tests[i] <- ""TtestEV"""
"0","        } else if (all(sp > 0.05) & all(fp <= 0.05)) {"
"0","          pv1 <- t.test(df[df$group == 1, i], df[df$group == 2, i], var.equal = FALSE)$p.value"
"0","          tests[i] <- ""TtestUEV"""
"0","        } else {"
"0","          pv1 <- wilcox.test(df[df$group == 1, i], df[df$group == 2, i])$p.value"
"0","          tests[i] <- ""Wilcox"""
"0","        }"
"0","      }"
"0","    }"
"0","  }"
"0","  return(list(p_values = pv1, tests = tests))"
"0","}"
"0",""
